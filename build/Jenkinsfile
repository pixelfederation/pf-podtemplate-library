#!/usr/bin/env groovy

@Library("pfJenkinsLibrary@0.27.2") _

String projectName = 'pf-podtemplate-library'
String podTemplateName = projectName
String pfRepo = "git@github.com:pixelfederation/${projectName}.git"
String pfChinaRepo = "devops/${projectName}.git"
String cnGitServer = "git@gogs.prod.cn-northwest-1.k8s.pxfd.tech"

podTemplateConf = [ name: "${podTemplateName}", label: "${podTemplateName}", inheritFrom: 'default-jnlp-util']

echo "podTemplateConf is : ${podTemplateConf}"

podTemplate( podTemplateConf ) {
  node( podTemplateConf.name ) {
    try {
      ansiColor('xterm') {
        stage('Clone Repositories and sync') {
            container('util') {
              sh """
                  git clone ${cnGitServer}:${pfChinaRepo} china
                  git clone ${pfRepo} upstream
                  cd china
                  for tag in \$(git tag --sort=creatordate| tail -n 10| awk '{ print \$1}')
                  do
                    git push --delete origin \$tag &
                  done
                  for job in \$(jobs -p);do wait \$job;done
                  cd ../upstream
                  git remote set-url origin ${cnGitServer}:${pfChinaRepo}
                  git push --all --force
                  git push --tags --force
              """
            }
        }
      }
    } catch(e) {
      throw e
    }
  }
}
